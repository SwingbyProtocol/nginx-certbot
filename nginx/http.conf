limit_req_zone $binary_remote_addr zone=sake_limit:10m rate=480r/m;
limit_req_log_level error;
limit_req_status 503;

proxy_cache_path /var/cache/nginx keys_zone=my_cache:5m levels=1:2 max_size=100m inactive=60m;
proxy_temp_path  /var/cache/nginx/cache;

log_format rt_cache '[$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" $remote_addr - $upstream_cache_status ';

server {
    listen 80;
    server_name _DOMAIN_;
    server_tokens off;

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl;
    server_name _DOMAIN_;
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_DOMAIN_/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
    # Specify the minimum length of the response to compress (default 20)
    gzip_min_length 500;
    
    access_log   /var/log/nginx/access.log rt_cache;

    location ~ ^/(docs|swagger.json)$ {
        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://_FORWARD_:7171;
        proxy_redirect off;
    }

    location /bb-btc {
        rewrite /bb-btc/(.*) /$1  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        
        proxy_cache my_cache;
        proxy_cache_valid 200 201 300 301 302 35s;
        add_header X-Cache-Status $upstream_cache_status;
        
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9130;
        proxy_redirect off;
    }

    location = /bb-btc/api {
        rewrite /bb-btc/api /api/  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9130;
        proxy_redirect off;
    }

    location /bb-eth {
        rewrite /bb-eth/(.*) /$1  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        
        proxy_cache my_cache;
        proxy_cache_valid 200 201 300 301 302 35s;
        add_header X-Cache-Status $upstream_cache_status;
        
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9131;
        proxy_redirect off;
    }

     location = /bb-eth/api {
        rewrite /bb-eth/api /api/  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9131;
        proxy_redirect off;
    }

    location /bb-bsc {
        rewrite /bb-bsc/(.*) /$1  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        
        proxy_cache my_cache;
        proxy_cache_valid 200 201 300 301 302 35s;
        add_header X-Cache-Status $upstream_cache_status;
        
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9132;
        proxy_redirect off;
    }

    location = /bb-bsc/api {
        rewrite /bb-bsc/api /api/  break;

        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://10.2.0.1:9132;
        proxy_redirect off;
    }

    location /btc-websocket {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://10.2.0.1:9130/websocket;
    }

    location /eth-websocket {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://10.2.0.1:9131/websocket;
    }

    location /bsc-websocket {
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://10.2.0.1:9132/websocket;
    }

    location / {
        limit_req zone=sake_limit burst=10;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header Access-Control-Allow-Origin * always;
        add_header Access-Control-Allow-Methods "POST, GET, OPTIONS";
        add_header Access-Control-Allow-Headers "Content-Type, Origin, Authorization, Accept";
        add_header Access-Control-Allow-Credentials true;
        if ($request_method = OPTIONS ) {
            return 200;
        }
        proxy_pass http://_FORWARD_:_PORT_;
        proxy_redirect off;
    }
}
